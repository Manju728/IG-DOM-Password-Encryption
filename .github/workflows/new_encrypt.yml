name: Password Encryption Workflow

on:
  workflow_dispatch:
    inputs:
      Environment:
        type: choice
        required: true
        options:
          - Integration
          - Production
      encryptionMethod:
        type: choice
        required: true
        options:
          - AES
          - RSA

jobs:
  password_encryption:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Define Users
        id: define_users
        run: |
          if [[ "${{ inputs.Environment }}" == "Integration" ]]; then
            USERS=("manju" "akhila" "ram" "naresh")
          elif [[ "${{ inputs.Environment }}" == "Production" ]]; then
            USERS=("naveen" "shashi" "ashik" "anvesh")
          fi
          echo "::set-output name=users::${USERS[@]}"

      - name: Generate Encrypted Passwords for Users
        id: encrypt_passwords
        run: |
          ENCRYPTED_PASSWORDS=""
          for USER in ${{ steps.define_users.outputs.users }}; do
            if [[ "${{ inputs.encryptionMethod }}" == "AES" ]]; then
              ENCRYPTED_PASSWORD=$(openssl rand -base64 12 | openssl enc -aes-256-cbc -a -salt -pass pass:somepassword)
            elif [[ "${{ inputs.encryptionMethod }}" == "RSA" ]]; then
              openssl genpkey -algorithm RSA -out private.pem -pkeyopt rsa_keygen_bits:2048
              openssl rsa -pubout -in private.pem -out public.pem
              ENCRYPTED_PASSWORD=$(openssl rand -base64 12 | openssl rsautl -encrypt -pubin -inkey public.pem | base64)
            fi
            echo "Generated encrypted password for user $USER: $ENCRYPTED_PASSWORD"
            # Append user:encrypted_password pair to ENCRYPTED_PASSWORDS with a space delimiter
            ENCRYPTED_PASSWORDS+="$USER:$ENCRYPTED_PASSWORD "$'\n'
          done

          # Write encrypted passwords to a file (handle multi-line output)
          echo "$ENCRYPTED_PASSWORDS" > encrypted_passwords.txt
          
      - name: Update Passwords in XML Files
        run: |
          ENVIRONMENT="${{ inputs.Environment }}"
          ENCRYPTION_METHOD="${{ inputs.encryptionMethod }}"
          USER="${{ steps.define_users.outputs.users }}"
          USERS_WITH_PASSWORDS=$(cat encrypted_passwords.txt)
          echo "$USERS_WITH_PASSWORDS"
          if [[ "$ENVIRONMENT" == "Integration" ]]; then
            SPECIFIC_FOLDER="./config/Integration"
          elif [[ "$ENVIRONMENT" == "Production" ]]; then
            SPECIFIC_FOLDER="./config/Production"
          fi
          echo "Processing XML files in $SPECIFIC_FOLDER"
          find $SPECIFIC_FOLDER -name "*.xml" -exec chmod u+w {} \;
          ls -l $SPECIFIC_FOLDER/*.xml
          for USER in "$(cat encrypted_passwords.txt)"; do
            echo "$USER_PASSWORD"
            ENCRYPTED_PASSWORD=$(echo "$USER_PASSWORD" | awk -F':' '{print $2}' | awk '{print $1}')
            for xml_file in "$SPECIFIC_FOLDER"/*.xml; do
              if [[ -f "$xml_file" ]]; then
                if grep -q "<alias name=\"aliasPw${USER}\"" "$xml_file"; then
                  echo "Updating password for $USER in $xml_file"
                  sed -i "/<alias name=\"aliasPw${USER}\"/s|password=\"[^\"]*\"|password=\"{${ENCRYPTION_METHOD}:${ENCRYPTED_PASSWORD}}\"|g" "$xml_file"
                else
                  echo "No matching alias found for $USER in $xml_file."
                fi
              fi
            done
          done
          echo "Updated the XML file(s) with encrypted passwords for users in $ENVIRONMENT environment."
          
      - name: Commit and Push Changes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add .
          git commit -m "Updated password for ${{ inputs.user }} using ${{ inputs.encryptionMethod }} encryption"
          git push
